// THIS FILE WAS AUTO-GENERATED BY proj. DO NOT MODIFY IT!
// If you would like to modify this datatype, instead modify
// lib/op-attrs/include/op-attrs/ops/broadcast.struct.toml
/* proj-data
{
  "generated_from": "890d0e63a08a30d925aa170aea6992ba"
}
*/

#ifndef _FLEXFLOW_LIB_OP_ATTRS_INCLUDE_OP_ATTRS_OPS_BROADCAST_DTG_H
#define _FLEXFLOW_LIB_OP_ATTRS_INCLUDE_OP_ATTRS_OPS_BROADCAST_DTG_H

#include "fmt/format.h"
#include "nlohmann/json.hpp"
#include "utils/stack_vector.h"
#include <functional>
#include <ostream>
#include <tuple>

namespace FlexFlow {
struct BroadcastAttrs {
  BroadcastAttrs() = delete;
  BroadcastAttrs(
      ::FlexFlow::stack_vector<int, MAX_TENSOR_DIM> const &target_dims);

  bool operator==(BroadcastAttrs const &) const;
  bool operator!=(BroadcastAttrs const &) const;
  bool operator<(BroadcastAttrs const &) const;
  bool operator>(BroadcastAttrs const &) const;
  bool operator<=(BroadcastAttrs const &) const;
  bool operator>=(BroadcastAttrs const &) const;
  ::FlexFlow::stack_vector<int, MAX_TENSOR_DIM> target_dims;
};
} // namespace FlexFlow

namespace std {
template <>
struct hash<FlexFlow::BroadcastAttrs> {
  size_t operator()(FlexFlow::BroadcastAttrs const &) const;
};
} // namespace std

namespace nlohmann {
template <>
struct adl_serializer<FlexFlow::BroadcastAttrs> {
  static FlexFlow::BroadcastAttrs from_json(json const &);
  static void to_json(json &, FlexFlow::BroadcastAttrs const &);
};
} // namespace nlohmann

namespace FlexFlow {
std::string format_as(BroadcastAttrs const &);
std::ostream &operator<<(std::ostream &, BroadcastAttrs const &);
} // namespace FlexFlow

#endif // _FLEXFLOW_LIB_OP_ATTRS_INCLUDE_OP_ATTRS_OPS_BROADCAST_DTG_H
